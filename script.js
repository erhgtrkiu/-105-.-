/* ===========================================================
   script.js
   –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ª–æ–≥–∏–∫–∏ —Å–∞–π—Ç–∞
   =========================================================== */

/* -----------------------------------------------------------
   –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
   ----------------------------------------------------------- */

let currentUser = null; // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–æ–±—ä–µ–∫—Ç –∏–ª–∏ null)
let users = [];         // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let teacherRequests = []; // –ó–∞—è–≤–∫–∏ –æ—Ç —É—á–∏—Ç–µ–ª–µ–π
let questions = [];     // –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
let answers = {};       // –û—Ç–≤–µ—Ç—ã –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º
let theme = "light";    // –¢–µ–º–∞ (light / dark)

/* -----------------------------------------------------------
   –ü–û–õ–£–ß–ï–ù–ò–ï –≠–õ–ï–ú–ï–ù–¢–û–í DOM
   ----------------------------------------------------------- */

// –°—Ç—Ä–∞–Ω–∏—Ü—ã
const pages = document.querySelectorAll(".page");

// –ú–µ–Ω—é
const menuItems = document.querySelectorAll(".menu-item");

// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
const userInfoEl = document.getElementById("user-info");

// –ö–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const loginBtn = document.getElementById("login-btn");
const registerBtn = document.getElementById("register-btn");

// –ú–æ–¥–∞–ª–∫–∏
const authModal = document.getElementById("auth-modal");
const qaModal = document.getElementById("qa-modal");
const answerModal = document.getElementById("answer-modal");
const teacherRequestsModal = document.getElementById("teacher-requests-modal");
const teacherDetailModal = document.getElementById("teacher-detail-modal");

// –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫
const translatorInput = document.getElementById("translator-input");
const translateBtn = document.getElementById("translate-btn");
const translationResult = document.getElementById("translation-result");

// –¢–µ–º–∞
const themeToggle = document.getElementById("theme-toggle");

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
const notificationArea = document.getElementById("notification-area");

// –ë–µ–π–¥–∂ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (QA)
const qaBadge = document.getElementById("qa-badge");

/* -----------------------------------------------------------
   –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
   ----------------------------------------------------------- */

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (toast)
function showNotification(message, type = "info") {
    const note = document.createElement("div");
    note.classList.add("notification");
    note.textContent = message;

    if (type === "success") {
        note.style.background = "#1a7f37";
    }
    if (type === "error") {
        note.style.background = "#d33";
    }

    notificationArea.appendChild(note);

    setTimeout(() => {
        note.remove();
    }, 4000);
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function showPage(pageId) {
    pages.forEach(p => p.classList.remove("active"));
    const page = document.getElementById(pageId);
    if (page) {
        page.classList.add("active");
    }

    menuItems.forEach(item => item.classList.remove("active"));
    const activeItem = document.querySelector(`.menu-item[data-page="${pageId}"]`);
    if (activeItem) {
        activeItem.classList.add("active");
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function saveData() {
    localStorage.setItem("users", JSON.stringify(users));
    localStorage.setItem("teacherRequests", JSON.stringify(teacherRequests));
    localStorage.setItem("questions", JSON.stringify(questions));
    localStorage.setItem("answers", JSON.stringify(answers));
    localStorage.setItem("theme", theme);
    if (currentUser) {
        localStorage.setItem("currentUser", JSON.stringify(currentUser));
    } else {
        localStorage.removeItem("currentUser");
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
function loadData() {
    const u = localStorage.getItem("users");
    const r = localStorage.getItem("teacherRequests");
    const q = localStorage.getItem("questions");
    const a = localStorage.getItem("answers");
    const t = localStorage.getItem("theme");
    const cu = localStorage.getItem("currentUser");

    if (u) users = JSON.parse(u);
    if (r) teacherRequests = JSON.parse(r);
    if (q) questions = JSON.parse(q);
    if (a) answers = JSON.parse(a);
    if (t) theme = t;
    if (cu) currentUser = JSON.parse(cu);
}

// –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É
function applyTheme() {
    if (theme === "dark") {
        document.body.classList.add("dark");
        themeToggle.textContent = "‚òÄÔ∏è";
    } else {
        document.body.classList.remove("dark");
        themeToggle.textContent = "üåô";
    }
}

/* -----------------------------------------------------------
   –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø / –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
   ----------------------------------------------------------- */

// –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function openAuthModal(mode = "login") {
    authModal.style.display = "flex";
    document.getElementById("auth-mode").value = mode;
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
function closeModal(modal) {
    modal.style.display = "none";
}

// –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function registerUser(role, fullName, password) {
    if (role === "teacher") {
        // –ó–∞—è–≤–∫–∞ –¥–ª—è —É—á–∏—Ç–µ–ª—è
        teacherRequests.push({ fullName, password });
        showNotification("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", "info");
    } else {
        // –£—á–µ–Ω–∏–∫ —Å—Ä–∞–∑—É —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
        const newUser = { role, fullName, password };
        users.push(newUser);
        showNotification("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞", "success");
    }
    saveData();
}

// –í–æ–π—Ç–∏
function loginUser(fullName, password) {
    if (fullName === "admin" && password === "admin") {
        currentUser = { role: "admin", fullName: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" };
        showNotification("–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "success");
    } else {
        const user = users.find(u => u.fullName === fullName && u.password === password);
        if (user) {
            currentUser = user;
            showNotification(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.fullName}`, "success");
        } else {
            showNotification("–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "error");
            return;
        }
    }
    saveData();
    updateUI();
}
/* ===========================================================
   –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ù–¢–ï–†–§–ï–ô–°–ê
   =========================================================== */

// –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ / –≤—ã—Ö–æ–¥–∞
function updateUI() {
    if (currentUser) {
        // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        if (loginBtn) loginBtn.style.display = "none";
        if (registerBtn) registerBtn.style.display = "none";

        // –ü–æ–∫–∞–∑–∞—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userInfoEl) userInfoEl.textContent = currentUser.fullName;

        // –ê–¥–º–∏–Ω –≤–∏–¥–∏—Ç –≤–∫–ª–∞–¥–∫—É –∑–∞—è–≤–æ–∫
        const teacherRequestsMenu = document.querySelector('[data-page="teacher-requests"]');
        if (teacherRequestsMenu) {
            teacherRequestsMenu.style.display = currentUser.role === "admin" ? "block" : "none";
        }
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        if (loginBtn) loginBtn.style.display = "inline-block";
        if (registerBtn) registerBtn.style.display = "inline-block";

        // –°–∫—Ä—ã—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userInfoEl) userInfoEl.textContent = "";

        // –°–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥–∫—É –∑–∞—è–≤–æ–∫
        const teacherRequestsMenu = document.querySelector('[data-page="teacher-requests"]');
        if (teacherRequestsMenu) {
            teacherRequestsMenu.style.display = "none";
        }
    }
}

/* ===========================================================
   –ó–ê–Ø–í–ö–ò –£–ß–ò–¢–ï–õ–ï–ô (–î–õ–Ø –ê–î–ú–ò–ù–ê)
   =========================================================== */

// –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏
function renderTeacherRequests() {
    const container = document.getElementById("teacher-requests-list");
    if (!container) return;

    container.innerHTML = "";

    if (teacherRequests.length === 0) {
        container.innerHTML = "<p>–ù–µ—Ç –∑–∞—è–≤–æ–∫</p>";
        return;
    }

    teacherRequests.forEach((req, index) => {
        const item = document.createElement("div");
        item.classList.add("request-item");

        const info = document.createElement("div");
        info.classList.add("request-info");
        info.textContent = `${req.fullName} (${req.password})`;

        const actions = document.createElement("div");
        actions.classList.add("request-actions");

        const approveBtn = document.createElement("button");
        approveBtn.classList.add("request-approve");
        approveBtn.textContent = "–ü—Ä–∏–Ω—è—Ç—å";
        approveBtn.addEventListener("click", () => approveTeacher(index));

        const denyBtn = document.createElement("button");
        denyBtn.classList.add("request-deny");
        denyBtn.textContent = "–û—Ç–∫–ª–æ–Ω–∏—Ç—å";
        denyBtn.addEventListener("click", () => denyTeacher(index));

        actions.appendChild(approveBtn);
        actions.appendChild(denyBtn);

        item.appendChild(info);
        item.appendChild(actions);

        container.appendChild(item);
    });
}

// –ü—Ä–∏–Ω—è—Ç—å —É—á–∏—Ç–µ–ª—è
function approveTeacher(index) {
    const req = teacherRequests[index];
    const newTeacher = {
        role: "teacher",
        fullName: req.fullName,
        password: req.password
    };
    users.push(newTeacher);
    teacherRequests.splice(index, 1);

    saveData();
    renderTeacherRequests();
    showNotification(`–£—á–∏—Ç–µ–ª—å ${req.fullName} –ø—Ä–∏–Ω—è—Ç`, "success");
}

// –û—Ç–∫–ª–æ–Ω–∏—Ç—å —É—á–∏—Ç–µ–ª—è
function denyTeacher(index) {
    const req = teacherRequests[index];
    teacherRequests.splice(index, 1);

    saveData();
    renderTeacherRequests();
    showNotification(`–ó–∞—è–≤–∫–∞ –æ—Ç ${req.fullName} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞`, "error");
}

/* ===========================================================
   –ö–ê–†–¢–û–ß–ö–ò –£–ß–ò–¢–ï–õ–ï–ô
   =========================================================== */

function renderTeachers() {
    const container = document.getElementById("teacher-list");
    if (!container) return;

    container.innerHTML = "";

    const teachers = users.filter(u => u.role === "teacher");

    if (teachers.length === 0) {
        container.innerHTML = "<p>–£—á–∏—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>";
        return;
    }

    teachers.forEach((teacher, index) => {
        const card = document.createElement("div");
        card.classList.add("teacher-card");

        const photo = document.createElement("img");
        photo.classList.add("teacher-photo");
        photo.src = teacher.photo || "https://via.placeholder.com/200x180";
        photo.alt = teacher.fullName;

        const name = document.createElement("h3");
        name.textContent = teacher.fullName;

        const subject = document.createElement("p");
        subject.textContent = teacher.subject || "–ü—Ä–µ–¥–º–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω";

        card.appendChild(photo);
        card.appendChild(name);
        card.appendChild(subject);

        card.addEventListener("click", () => openTeacherDetail(teacher));

        container.appendChild(card);
    });
}

/* ===========================================================
   –î–ï–¢–ê–õ–ò –£–ß–ò–¢–ï–õ–Ø
   =========================================================== */

function openTeacherDetail(teacher) {
    if (!teacherDetailModal) return;

    teacherDetailModal.style.display = "flex";

    const photo = teacherDetailModal.querySelector(".teacher-detail-photo");
    const name = teacherDetailModal.querySelector(".teacher-detail-name");
    const subject = teacherDetailModal.querySelector(".teacher-detail-subject");
    const experience = teacherDetailModal.querySelector(".teacher-detail-experience");

    if (photo) photo.src = teacher.photo || "https://via.placeholder.com/100";
    if (name) name.textContent = teacher.fullName;
    if (subject) subject.textContent = teacher.subject || "–ü—Ä–µ–¥–º–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω";
    if (experience) experience.textContent = teacher.experience || "–û–ø—ã—Ç –Ω–µ —É–∫–∞–∑–∞–Ω";
}
/* ===========================================================
   –í–û–ü–†–û–°–´-–û–¢–í–ï–¢–´
   =========================================================== */

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
function addQuestion(text) {
    if (!currentUser) {
        showNotification("–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "error");
        return;
    }

    const question = {
        id: Date.now(),
        text,
        author: currentUser.fullName,
        role: currentUser.role,
        createdAt: new Date().toLocaleString()
    };

    questions.push(question);
    saveData();
    renderQuestions();
    updateQABadge();
    showNotification("–í–æ–ø—Ä–æ—Å –¥–æ–±–∞–≤–ª–µ–Ω", "success");
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
function renderQuestions() {
    const container = document.getElementById("qa-list");
    if (!container) return;

    container.innerHTML = "";

    if (questions.length === 0) {
        container.innerHTML = "<p>–ü–æ–∫–∞ –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤</p>";
        return;
    }

    questions.forEach(q => {
        const card = document.createElement("div");
        card.classList.add("question-card");

        const text = document.createElement("div");
        text.classList.add("question-text");
        text.textContent = q.text;

        const meta = document.createElement("div");
        meta.classList.add("question-meta");
        meta.textContent = `${q.author} (${q.role}), ${q.createdAt}`;

        card.appendChild(text);
        card.appendChild(meta);

        // –û—Ç–≤–µ—Ç—ã
        if (answers[q.id]) {
            const answerBlock = document.createElement("div");
            answerBlock.classList.add("answer-block");
            answerBlock.textContent = answers[q.id].text;
            card.appendChild(answerBlock);
        } else {
            // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π –∏ –∞–¥–º–∏–Ω–∞
            if (currentUser && (currentUser.role === "teacher" || currentUser.role === "admin")) {
                const actions = document.createElement("div");
                actions.classList.add("answer-actions");

                const btn = document.createElement("button");
                btn.textContent = "–û—Ç–≤–µ—Ç–∏—Ç—å";
                btn.addEventListener("click", () => openAnswerModal(q.id));

                actions.appendChild(btn);
                card.appendChild(actions);
            }
        }

        container.appendChild(card);
    });
}

// –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –æ—Ç–≤–µ—Ç–∞
let currentAnswerQuestionId = null;
function openAnswerModal(questionId) {
    if (!currentUser) {
        showNotification("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", "error");
        return;
    }
    currentAnswerQuestionId = questionId;
    answerModal.style.display = "flex";
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç
function saveAnswer(text) {
    if (!currentUser || (currentUser.role !== "teacher" && currentUser.role !== "admin")) {
        showNotification("–¢–æ–ª—å–∫–æ —É—á–∏—Ç–µ–ª—è –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–≥—É—Ç –æ—Ç–≤–µ—á–∞—Ç—å", "error");
        return;
    }
    if (!currentAnswerQuestionId) return;

    answers[currentAnswerQuestionId] = {
        text,
        author: currentUser.fullName,
        createdAt: new Date().toLocaleString()
    };

    currentAnswerQuestionId = null;
    saveData();
    renderQuestions();
    updateQABadge();
    showNotification("–û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω", "success");
    closeModal(answerModal);
}

/* ===========================================================
   –ë–ï–ô–î–ñ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô (–í–û–ü–†–û–°–´)
   =========================================================== */

function updateQABadge() {
    if (!qaBadge) return;

    const unanswered = questions.filter(q => !answers[q.id]);
    if (unanswered.length > 0) {
        qaBadge.style.display = "inline-flex";
        qaBadge.textContent = unanswered.length;
    } else {
        qaBadge.style.display = "none";
    }
}
/* ===========================================================
   –ü–ï–†–ï–í–û–î–ß–ò–ö (–†–£–°–°–ö–ò–ô ‚Üí –ö–ò–¢–ê–ô–°–ö–ò–ô)
   -----------------------------------------------------------
   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Google Translate API –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
   + –±–∏–±–ª–∏–æ—Ç–µ–∫—É pinyin-pro –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–∏–Ω—å–∏–Ω—è.
   =========================================================== */

// –ö–ª—é—á –¥–ª—è Google Translate API (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π!)
const GOOGLE_API_KEY = "YOUR_API_KEY_HERE";

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
async function translateText(text) {
    const resultContainer = document.getElementById("translation-result");
    if (!resultContainer) return;

    resultContainer.innerHTML = "";

    if (!text.trim()) {
        resultContainer.innerHTML = "<p>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞</p>";
        return;
    }

    try {
        // –ó–∞–ø—Ä–æ—Å –∫ Google Translate API
        const url = `https://translation.googleapis.com/language/translate/v2?key=${GOOGLE_API_KEY}`;

        const response = await fetch(url, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                q: text,
                source: "ru",
                target: "zh-CN",
                format: "text"
            })
        });

        const data = await response.json();

        if (!data.data || !data.data.translations) {
            throw new Error("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞");
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ (–∫–∏—Ç–∞–π—Å–∫–∏–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
        const hanzi = data.data.translations[0].translatedText;

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –ø–∏–Ω—å–∏–Ω—å —á–µ—Ä–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫—É pinyin-pro
        // –î–ª—è —ç—Ç–æ–≥–æ –ø–æ–¥–∫–ª—é—á–∏ <script src="https://unpkg.com/pinyin-pro"></script> –≤ index.html
        const pinyin = window.pinyinPro ? window.pinyinPro.pinyin(hanzi, { toneType: "marks" }) : "ÈúÄË¶ÅÂ∫ì pinyin-pro";

        // –§–æ—Ä–º–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
        const hanziEl = document.createElement("p");
        hanziEl.textContent = `–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã: ${hanzi}`;

        const pinyinEl = document.createElement("p");
        pinyinEl.textContent = `–ü–∏–Ω—å–∏–Ω—å: ${pinyin}`;

        resultContainer.appendChild(hanziEl);
        resultContainer.appendChild(pinyinEl);

    } catch (err) {
        console.error(err);
        resultContainer.innerHTML = "<p style='color:red;'>–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞</p>";
    }
}

/* ===========================================================
   –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –¢–ï–ú–´
   =========================================================== */

function toggleTheme() {
    if (theme === "light") {
        theme = "dark";
    } else {
        theme = "light";
    }
    saveData();
    applyTheme();
}
/* ===========================================================
   –û–ë–†–ê–ë–û–¢–ö–ê –°–û–ë–´–¢–ò–ô
   =========================================================== */

document.addEventListener("DOMContentLoaded", () => {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    loadData();
    applyTheme();
    updateUI();
    renderTeacherRequests();
    renderTeachers();
    renderQuestions();
    updateQABadge();

    /* -------------------------------------------------------
       –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –°–¢–†–ê–ù–ò–¶–ê–ú
       ------------------------------------------------------- */
    menuItems.forEach(item => {
        item.addEventListener("click", () => {
            const pageId = item.getAttribute("data-page");
            if (pageId) {
                showPage(pageId);
            }
        });
    });

    /* -------------------------------------------------------
       –¢–ï–ú–ê
       ------------------------------------------------------- */
    if (themeToggle) {
        themeToggle.addEventListener("click", toggleTheme);
    }

    /* -------------------------------------------------------
       –ö–ù–û–ü–ö–ò –í–•–û–î–ê / –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
       ------------------------------------------------------- */
    if (loginBtn) {
        loginBtn.addEventListener("click", () => openAuthModal("login"));
    }

    if (registerBtn) {
        registerBtn.addEventListener("click", () => openAuthModal("register"));
    }

    /* -------------------------------------------------------
       –ú–û–î–ê–õ–ö–ò (–ó–ê–ö–†–´–¢–ò–ï)
       ------------------------------------------------------- */
    document.querySelectorAll(".modal .close").forEach(btn => {
        btn.addEventListener("click", e => {
            const modal = e.target.closest(".modal");
            if (modal) closeModal(modal);
        });
    });

    window.addEventListener("click", e => {
        document.querySelectorAll(".modal").forEach(modal => {
            if (e.target === modal) {
                closeModal(modal);
            }
        });
    });

    /* -------------------------------------------------------
       –§–û–†–ú–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
       ------------------------------------------------------- */
    const authForm = document.getElementById("auth-form");
    if (authForm) {
        authForm.addEventListener("submit", e => {
            e.preventDefault();

            const mode = document.getElementById("auth-mode").value;
            const role = document.getElementById("auth-role").value;
            const fullName = document.getElementById("auth-fullname").value.trim();
            const password = document.getElementById("auth-password").value.trim();

            if (!fullName || !password) {
                showNotification("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è", "error");
                return;
            }

            if (mode === "register") {
                registerUser(role, fullName, password);
            } else {
                loginUser(fullName, password);
            }

            closeModal(authModal);
        });
    }

    /* -------------------------------------------------------
       –§–û–†–ú–ê –î–û–ë–ê–í–õ–ï–ù–ò–Ø –í–û–ü–†–û–°–ê
       ------------------------------------------------------- */
    const questionForm = document.getElementById("question-form");
    if (questionForm) {
        questionForm.addEventListener("submit", e => {
            e.preventDefault();

            const input = document.getElementById("question-input");
            if (!input || !input.value.trim()) {
                showNotification("–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", "error");
                return;
            }

            addQuestion(input.value.trim());
            input.value = "";
        });
    }

    /* -------------------------------------------------------
       –§–û–†–ú–ê –û–¢–í–ï–¢–ê
       ------------------------------------------------------- */
    const answerForm = document.getElementById("answer-form");
    if (answerForm) {
        answerForm.addEventListener("submit", e => {
            e.preventDefault();

            const input = document.getElementById("answer-input");
            if (!input || !input.value.trim()) {
                showNotification("–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç", "error");
                return;
            }

            saveAnswer(input.value.trim());
            input.value = "";
        });
    }

    /* -------------------------------------------------------
       –ö–ù–û–ü–ö–ê –ü–ï–†–ï–í–û–î–ß–ò–ö–ê
       ------------------------------------------------------- */
    if (translateBtn) {
        translateBtn.addEventListener("click", () => {
            const text = translatorInput.value;
            translateText(text);
        });
    }
});
/* ===========================================================
   –í–´–•–û–î –ò–ó –ê–ö–ö–ê–£–ù–¢–ê
   =========================================================== */

function logoutUser() {
    currentUser = null;
    saveData();
    updateUI();
    showNotification("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞", "info");
    showPage("home");
}

/* ===========================================================
   –ê–í–¢–û–õ–û–ì–ò–ù –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
   =========================================================== */

function autoLogin() {
    loadData();
    applyTheme();
    updateUI();
    renderTeacherRequests();
    renderTeachers();
    renderQuestions();
    updateQABadge();

    if (currentUser) {
        showNotification(`–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${currentUser.fullName}`, "success");
    } else {
        showNotification("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å", "info");
    }
}

/* ===========================================================
   –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–¢–ò–õ–ò–¢–´
   =========================================================== */

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ ID (–¥–ª—è –≥—Ä—É–ø–ø, –∑–∞–Ω—è—Ç–∏–π –∏ —Ç. –¥.)
function generateId(prefix = "id") {
    return prefix + "_" + Math.random().toString(36).substr(2, 9);
}

// –î–æ–±–∞–≤–∏—Ç—å —Ñ–µ–π–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª—è —Ç–µ—Å—Ç–∞)
function seedData() {
    if (users.length === 0) {
        users.push({ role: "student", fullName: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", password: "1234" });
        users.push({ role: "teacher", fullName: "–õ–∏ –í—ç–π", password: "1234", subject: "–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫", experience: "5 –ª–µ—Ç" });
    }

    if (questions.length === 0) {
        questions.push({
            id: generateId("q"),
            text: "–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∏–Ω—å–∏–Ω—å?",
            author: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
            role: "student",
            createdAt: new Date().toLocaleString()
        });
    }

    saveData();
}

// –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function clearAllData() {
    localStorage.clear();
    users = [];
    teacherRequests = [];
    questions = [];
    answers = {};
    currentUser = null;
    theme = "light";
    updateUI();
    renderTeachers();
    renderTeacherRequests();
    renderQuestions();
    updateQABadge();
    applyTheme();
    showNotification("–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã", "warning");
}

/* ===========================================================
   –ó–ê–ü–£–°–ö –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
   =========================================================== */

document.addEventListener("DOMContentLoaded", () => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    autoLogin();

    // –î–ª—è —Ç–µ—Å—Ç–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    // seedData();

    // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    const logoutBtn = document.getElementById("logout-btn");
    if (logoutBtn) {
        logoutBtn.addEventListener("click", logoutUser);
    }
});
