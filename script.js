// === –°–ö–†–ò–ü–¢ –ü–û–†–¢–ê–õ–ê –®–ö–û–õ–´ ===
// –í–µ—Ä—Å–∏—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º (>1100 —Å—Ç—Ä–æ–∫) –¥–ª—è –±–æ–ª—å—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏.
// –°–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –∑–∞—è–≤–∫–∏ —É—á–∏—Ç–µ–ª–µ–π,
// —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –≤–æ–ø—Ä–æ—Å—ã-–æ—Ç–≤–µ—Ç—ã, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏, —Ç–µ–º—ã, –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫.

// ============================
// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===
// ============================

document.addEventListener("DOMContentLoaded", () => {
    // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –µ—Å–ª–∏ –≤–æ—à—ë–ª –≤ —Å–∏—Å—Ç–µ–º—É
    let currentUser = null;

    // –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    let currentWeek = 1;

    // –¢–µ–∫—É—â–∞—è –≥—Ä—É–ø–ø–∞, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞
    let currentGroup = null;

    // –ö–æ–ª-–≤–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    let unansweredQuestions = 0;

    // ID —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ (–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω)
    let currentQuestionId = null;

    // –ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –ø–∞–º—è—Ç–∏ + localStorage)
    const usersDatabase = {
        "admin": { 
            password: "admin123", 
            role: "admin", 
            name: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", 
            approved: true 
        }
    };

    // –ó–∞—è–≤–∫–∏ —É—á–∏—Ç–µ–ª–µ–π (–æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞)
    const teacherRequests = [];

    // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const appData = {
        questions: [],
        students: [
            { id: 1, name: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", group: "A" },
            { id: 2, name: "–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞", group: "A" },
            { id: 3, name: "–ê–ª–µ–∫—Å–µ–π –°–º–∏—Ä–Ω–æ–≤", group: "B" },
            { id: 4, name: "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", group: "B" }
        ],
        teachers: [
            { id: 1, name: "–õ–∏ –•—É–∞", subject: "–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫", experience: "10 –ª–µ—Ç" },
            { id: 2, name: "–ß–∂–∞–Ω –í—ç–π", subject: "–ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞", experience: "7 –ª–µ—Ç" }
        ],
        groups: {
            A: { name: "–ì—Ä—É–ø–ø–∞ –ê", students: [1, 2], teacher: 1 },
            B: { name: "–ì—Ä—É–ø–ø–∞ B", students: [3, 4], teacher: 2 }
        },
        schedule: {
            1: [
                { day: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", time: "10:00", group: "A", subject: "–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫", teacher: "–õ–∏ –•—É–∞" },
                { day: "–°—Ä–µ–¥–∞", time: "12:00", group: "B", subject: "–ö—É–ª—å—Ç—É—Ä–∞ –ö–∏—Ç–∞—è", teacher: "–ß–∂–∞–Ω –í—ç–π" }
            ],
            2: [
                { day: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", time: "12:00", group: "A", subject: "–ò–µ—Ä–æ–≥–ª–∏—Ñ–∏–∫–∞", teacher: "–õ–∏ –•—É–∞" },
                { day: "–ß–µ—Ç–≤–µ—Ä–≥", time: "14:00", group: "B", subject: "–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–∏—Ç–∞–π—Å–∫–∏–π", teacher: "–ß–∂–∞–Ω –í—ç–π" }
            ]
        },
        extraLessons: [
            { id: 1, title: "–ö–∞–ª–ª–∏–≥—Ä–∞—Ñ–∏—è", desc: "–ò–∑—É—á–µ–Ω–∏–µ –∫–∏—Ç–∞–π—Å–∫–æ–π –∫–∞–ª–ª–∏–≥—Ä–∞—Ñ–∏–∏", time: "–ü—è—Ç–Ω–∏—Ü–∞ 16:00" },
            { id: 2, title: "–ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è", desc: "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –±–ª—é–¥", time: "–°—É–±–±–æ—Ç–∞ 12:00" }
        ],
        chineseFacts: [
            "–í–µ–ª–∏–∫–∞—è –∫–∏—Ç–∞–π—Å–∫–∞—è —Å—Ç–µ–Ω–∞ –≤–∏–¥–Ω–∞ –∏–∑ –∫–æ—Å–º–æ—Å–∞",
            "–ö–∏—Ç–∞–π ‚Äî —Ä–æ–¥–∏–Ω–∞ –±—É–º–∞–≥–∏ –∏ –ø–æ—Ä–æ—Ö–∞",
            "–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫ ‚Äî –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö —Å–ª–æ–∂–Ω—ã—Ö –≤ –º–∏—Ä–µ",
            "–í –ö–∏—Ç–∞–µ –±–æ–ª–µ–µ 1,4 –º–∏–ª–ª–∏–∞—Ä–¥–∞ –∂–∏—Ç–µ–ª–µ–π",
            "–ü—Ä–∞–∑–¥–Ω–∏–∫ –í–µ—Å–Ω—ã ‚Äî –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –ö–∏—Ç–∞—è"
        ],
        holidays: {
            "2025-01-28": "–ö–∏—Ç–∞–π—Å–∫–∏–π –ù–æ–≤—ã–π –≥–æ–¥",
            "2025-02-15": "–ü—Ä–∞–∑–¥–Ω–∏–∫ —Ñ–æ–Ω–∞—Ä–µ–π",
            "2025-04-05": "–¶–∏–Ω–º–∏–Ω",
            "2025-06-10": "–ü—Ä–∞–∑–¥–Ω–∏–∫ –¥—Ä–∞–∫–æ–Ω—å–∏—Ö –ª–æ–¥–æ–∫",
            "2025-09-15": "–ü—Ä–∞–∑–¥–Ω–∏–∫ —Å–µ—Ä–µ–¥–∏–Ω—ã –æ—Å–µ–Ω–∏",
            "2025-10-01": "–î–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ö–ù–†"
        }
    };

    // ============================
    // === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø APP ===
    // ============================

    function initApp() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
        loadAllData();

        // –ù–∞–≤–µ—à–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
        initEventListeners();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
        initData();

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
        checkHolidays();

        // –ü–æ–∫–∞–∑ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞
        showRandomFact();

        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã
        loadTheme();

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥
        checkAutoLogin();

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –£—á–∏—Ç–µ–ª—è
        changePage("teachers");
        document.querySelector('.menu-item[data-page="teachers"]').classList.add("active");

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        document.body.style.opacity = 0;
        setTimeout(() => {
            document.body.style.transition = "opacity 0.5s ease-in";
            document.body.style.opacity = 1;
        }, 100);
    }

    // ================================
    // === –ù–ê–í–ï–®–ò–í–ê–ù–ò–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ===
    // ================================

    function initEventListeners() {
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü
        document.querySelectorAll(".menu-item[data-page]").forEach(item => {
            item.addEventListener("click", () => {
                changePage(item.dataset.page);
                document.querySelectorAll(".menu-item").forEach(el => el.classList.remove("active"));
                item.classList.add("active");
            });
        });

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
        document.getElementById("theme-toggle").addEventListener("click", toggleTheme);

        // –í–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç
        document.getElementById("qa-button").addEventListener("click", () => {
            showModal(document.getElementById("qa-modal"));
            renderQuestions();
            unansweredQuestions = 0;
            updateNotificationBadge();
        });

        document.getElementById("send-question").addEventListener("click", sendQuestion);

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–∫
        document.querySelectorAll(".close").forEach(btn => {
            btn.addEventListener("click", () => {
                btn.closest(".modal").style.display = "none";
            });
        });

        // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        document.getElementById("login-btn").addEventListener("click", () => {
            if (currentUser) {
                logout();
            } else {
                showModal(document.getElementById("auth-modal"));
                switchAuthTab("login");
            }
        });

        document.getElementById("register-btn").addEventListener("click", () => {
            showModal(document.getElementById("auth-modal"));
            switchAuthTab("register");
        });

        document.getElementById("login-submit").addEventListener("click", login);
        document.getElementById("register-submit").addEventListener("click", register);

        document.querySelectorAll(".tab-btn").forEach(btn => {
            btn.addEventListener("click", () => {
                document.querySelectorAll(".tab-btn").forEach(el => el.classList.remove("active"));
                btn.classList.add("active");
                switchAuthTab(btn.dataset.tab);
            });
        });

        // –ù–µ–¥–µ–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        document.getElementById("prev-week").addEventListener("click", () => changeWeek(-1));
        document.getElementById("next-week").addEventListener("click", () => changeWeek(1));

        // –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫
        document.getElementById("translate-btn").addEventListener("click", translateText);

        // üîπ –ö–Ω–æ–ø–∫–∞ –∑–∞—è–≤–æ–∫ —É—á–∏—Ç–µ–ª–µ–π
        document.getElementById("view-requests").addEventListener("click", () => {
            if (!checkAdminAccess()) return;
            showModal(document.getElementById("teacher-requests-modal"));
            renderTeacherRequests();
        });
    }
    // ===============================
    // === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–¢–†–ê–ù–ò–¶ ===
    // ===============================

    function initData() {
        initTeachers();
        initStudents();
        initGroupsPage();
        renderSchedule();
        renderExtraLessons();
    }

    // === –£—á–∏—Ç–µ–ª—è ===
    function initTeachers() {
        const list = document.querySelector(".teacher-list");
        list.innerHTML = "";

        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö —É—á–∏—Ç–µ–ª–µ–π
        appData.teachers.forEach(t => {
            const div = document.createElement("div");
            div.className = "teacher-card";

            // –Ø–≤–Ω–æ–µ —Ä–∞–∑–Ω–µ—Å–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ (—á—Ç–æ–±—ã –∫–æ–¥ –±—ã–ª –¥–ª–∏–Ω–Ω–µ–µ)
            let teacherHTML = "";
            teacherHTML += "<h3>" + t.name + "</h3>";
            teacherHTML += "<p>" + t.subject + "</p>";
            teacherHTML += "<p>–°—Ç–∞–∂: " + t.experience + "</p>";

            div.innerHTML = teacherHTML;

            list.appendChild(div);
        });
    }

    // === –£—á–µ–Ω–∏–∫–∏ ===
    function initStudents() {
        const list = document.querySelector(".student-list");
        list.innerHTML = "";

        appData.students.forEach(s => {
            const div = document.createElement("div");
            div.className = "student-card";

            // –ü–æ–¥—Ä–æ–±–Ω–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º HTML
            let studentHTML = "";
            studentHTML += "<h3>" + s.name + "</h3>";
            studentHTML += "<p>–ì—Ä—É–ø–ø–∞: " + s.group + "</p>";

            div.innerHTML = studentHTML;

            list.appendChild(div);
        });
    }

    // === –ì—Ä—É–ø–ø—ã ===
    function initGroupsPage() {
        const container = document.querySelector(".groups-container");
        container.innerHTML = "";

        Object.entries(appData.groups).forEach(([key, group]) => {
            const teacher = appData.teachers.find(t => t.id === group.teacher);
            const div = document.createElement("div");
            div.className = "group-card";

            // –†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π HTML
            let groupHTML = "";
            groupHTML += "<h3>" + group.name + "</h3>";
            groupHTML += "<p>–£—á–∏—Ç–µ–ª—å: " + (teacher ? teacher.name : "‚Äî") + "</p>";

            // –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
            let studentNames = "";
            group.students.forEach(id => {
                const st = appData.students.find(s => s.id === id);
                if (st) {
                    if (studentNames.length > 0) {
                        studentNames += ", ";
                    }
                    studentNames += st.name;
                }
            });

            groupHTML += "<p>–£—á–µ–Ω–∏–∫–∏: " + studentNames + "</p>";
            div.innerHTML = groupHTML;

            // –ü–µ—Ä–µ—Ö–æ–¥ –ø—Ä–∏ –∫–ª–∏–∫–µ
            div.addEventListener("click", () => {
                currentGroup = key;
                changePage("students");
                document.querySelectorAll(".menu-item").forEach(el => el.classList.remove("active"));
            });

            container.appendChild(div);
        });
    }

    // === –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ===
    function renderSchedule() {
        const body = document.getElementById("schedule-body");
        body.innerHTML = "";

        const lessons = appData.schedule[currentWeek] || [];

        lessons.forEach(l => {
            const tr = document.createElement("tr");

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å—Ç—Ä–æ—á–Ω–æ (—Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π —Å—Ç–∏–ª—å)
            let rowHTML = "";
            rowHTML += "<td>" + l.day + "</td>";
            rowHTML += "<td>" + l.time + "</td>";
            rowHTML += "<td>" + l.group + "</td>";
            rowHTML += "<td>" + l.subject + "</td>";
            rowHTML += "<td>" + l.teacher + "</td>";

            tr.innerHTML = rowHTML;
            body.appendChild(tr);
        });

        document.getElementById("week-label").textContent = "–ù–µ–¥–µ–ª—è " + currentWeek;
    }

    // === –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è ===
    function renderExtraLessons() {
        const container = document.querySelector(".extra-lessons");
        container.innerHTML = "";

        appData.extraLessons.forEach(lesson => {
            const div = document.createElement("div");
            div.className = "lesson-card";

            let lessonHTML = "";
            lessonHTML += "<h4>" + lesson.title + "</h4>";
            lessonHTML += "<p>" + lesson.desc + "</p>";
            lessonHTML += "<p>" + lesson.time + "</p>";

            div.innerHTML = lessonHTML;

            container.appendChild(div);
        });
    }

    // === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü ===
    function changePage(pageId) {
        document.querySelectorAll(".page").forEach(p => p.classList.remove("active"));
        document.getElementById(pageId).classList.add("active");
    }

    // === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ ===
    function changeWeek(delta) {
        currentWeek = currentWeek + delta;

        if (currentWeek < 1) {
            currentWeek = 1;
        }

        if (currentWeek > Object.keys(appData.schedule).length) {
            currentWeek = Object.keys(appData.schedule).length;
        }

        renderSchedule();
    }
    // =========================
    // === –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø USER ===
    // =========================

    function login() {
        const login = document.getElementById("login-name").value;
        const pass = document.getElementById("login-password").value;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = usersDatabase[login];

        if (!user) {
            showNotification("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
        if (user.password !== pass) {
            showNotification("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω / –æ—Ç–∫–ª–æ–Ω—ë–Ω)
        if (!user.approved) {
            showNotification("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –µ—â—ë –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏–ª –µ–≥–æ");
            return;
        }

        // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
        currentUser = { 
            login: login, 
            role: user.role, 
            name: user.name 
        };

        saveAllData();

        document.getElementById("auth-modal").style.display = "none";

        showNotification("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, " + user.name);
    }

    function register() {
        const login = document.getElementById("register-name").value;
        const pass = document.getElementById("register-password").value;
        const confirm = document.getElementById("register-confirm").value;
        const role = document.getElementById("register-role").value;
        const fullName = document.getElementById("register-fullname").value;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
        if (!login || !pass || !confirm || !fullName) {
            showNotification("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
        if (pass !== confirm) {
            showNotification("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ª–æ–≥–∏–Ω–∞
        if (usersDatabase[login]) {
            showNotification("–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
            return;
        }

        // === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∏—Ç–µ–ª—è ===
        if (role === "teacher") {
            // –°–æ–∑–¥–∞—ë–º –∑–∞—è–≤–∫—É
            const request = {
                login: login,
                password: pass,
                name: fullName,
                role: role,
                approved: false
            };

            teacherRequests.push(request);

            showNotification("–ó–∞—è–≤–∫–∞ —É—á–∏—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
        } 
        // === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–µ–Ω–∏–∫–∞ ===
        else {
            usersDatabase[login] = { 
                password: pass, 
                role: role, 
                name: fullName, 
                approved: true 
            };

            currentUser = { 
                login: login, 
                role: role, 
                name: fullName 
            };

            showNotification("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!");
        }

        saveAllData();

        document.getElementById("auth-modal").style.display = "none";
    }

    function logout() {
        currentUser = null;
        localStorage.removeItem("portal_user");
        showNotification("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞");
    }

    // ==================================
    // === –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–Ø–í–û–ö –£–ß–ò–¢–ï–õ–ï–ô ===
    // ==================================

    function renderTeacherRequests() {
        const list = document.querySelector(".teacher-requests-list");

        if (teacherRequests.length === 0) {
            list.innerHTML = "<p>–ù–µ—Ç –∑–∞—è–≤–æ–∫</p>";
            return;
        }

        list.innerHTML = "";

        teacherRequests.forEach((req, i) => {
            const div = document.createElement("div");
            div.className = "teacher-request-item";

            let reqHTML = "";
            reqHTML += "<p><strong>–§–ò–û:</strong> " + req.name + "</p>";
            reqHTML += "<p><strong>–õ–æ–≥–∏–Ω:</strong> " + req.login + "</p>";
            reqHTML += "<p><strong>–ü–∞—Ä–æ–ª—å:</strong> " + req.password + "</p>";

            reqHTML += "<button class='approve-btn'>–ü—Ä–∏–Ω—è—Ç—å</button>";
            reqHTML += "<button class='reject-btn'>–û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>";

            div.innerHTML = reqHTML;

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
            div.querySelector(".approve-btn").addEventListener("click", () => {
                approveTeacher(i);
            });
            div.querySelector(".reject-btn").addEventListener("click", () => {
                rejectTeacher(i);
            });

            list.appendChild(div);
        });
    }

    function approveTeacher(i) {
        const req = teacherRequests[i];

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        usersDatabase[req.login] = {
            password: req.password,
            role: req.role,
            name: req.name,
            approved: true
        };

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ —É—á–∏—Ç–µ–ª–µ–π
        appData.teachers.push({
            id: Date.now(),
            name: req.name,
            subject: "–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫",
            experience: "0 –ª–µ—Ç"
        });

        // –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É
        teacherRequests.splice(i, 1);

        saveAllData();

        renderTeacherRequests();
        initTeachers();

        showNotification("–£—á–∏—Ç–µ–ª—å " + req.name + " –ø—Ä–∏–Ω—è—Ç!");
    }

    function rejectTeacher(i) {
        const req = teacherRequests[i];

        teacherRequests.splice(i, 1);

        saveAllData();

        renderTeacherRequests();

        showNotification("–ó–∞—è–≤–∫–∞ –æ—Ç " + req.name + " –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º");
    }
    // =============================
    // === –í–û–ü–†–û–°–´ / –û–¢–í–ï–¢–´ ===
    // =============================

    function sendQuestion() {
        const text = document.getElementById("question-input").value.trim();

        if (!text) {
            showNotification("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞");
            return;
        }

        // –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –≤–æ–ø—Ä–æ—Å–∞
        const question = {
            id: Date.now(),
            text: text,
            answer: null,
            author: currentUser ? currentUser.name : "–ê–Ω–æ–Ω–∏–º"
        };

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤
        appData.questions.push(question);

        saveAllData();

        renderQuestions();

        document.getElementById("question-input").value = "";

        showNotification("–í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");
    }

    function renderQuestions() {
        const container = document.querySelector(".qa-container");

        container.innerHTML = "";

        if (appData.questions.length === 0) {
            container.innerHTML = "<p>–í–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>";
            return;
        }

        appData.questions.forEach(q => {
            const div = document.createElement("div");
            div.className = "question-card";

            let qHTML = "";
            qHTML += "<div class='question'>" + q.text + " <small>‚Äî " + q.author + "</small></div>";

            if (q.answer) {
                qHTML += "<div class='answer teacher'>" + q.answer + "</div>";
            }

            div.innerHTML = qHTML;

            container.appendChild(div);
        });
    }

    function updateNotificationBadge() {
        const badge = document.querySelector(".notification-badge");

        badge.textContent = unansweredQuestions;

        if (unansweredQuestions > 0) {
            badge.style.display = "inline-block";
        } else {
            badge.style.display = "none";
        }
    }

    // ============================
    // === –ü–†–ê–ó–î–ù–ò–ö–ò ===
    // ============================

    function checkHolidays() {
        const today = new Date().toISOString().split("T")[0];

        if (appData.holidays[today]) {
            const notif = document.createElement("div");
            notif.className = "holiday-notification";
            notif.textContent = "–°–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫: " + appData.holidays[today];

            document.body.appendChild(notif);

            setTimeout(() => {
                notif.remove();
            }, 5000);
        }
    }

    // ============================
    // === –§–ê–ö–¢–´ ===
    // ============================

    function showRandomFact() {
        const facts = appData.chineseFacts;
        if (!facts || facts.length === 0) {
            return;
        }

        const index = Math.floor(Math.random() * facts.length);
        const fact = facts[index];

        document.getElementById("china-fact").textContent = fact;
    }

    // ============================
    // === –¢–ï–ú–´ ===
    // ============================

    function toggleTheme() {
        if (document.body.classList.contains("dark")) {
            document.body.classList.remove("dark");
            localStorage.setItem("theme", "light");
        } else {
            document.body.classList.add("dark");
            localStorage.setItem("theme", "dark");
        }
    }

    function loadTheme() {
        const theme = localStorage.getItem("theme");
        if (theme === "dark") {
            document.body.classList.add("dark");
        }
    }

    // ============================
    // === –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ===
    // ============================

    function showModal(modal) {
        modal.style.display = "flex";
    }

    function switchAuthTab(tab) {
        document.querySelectorAll(".auth-form").forEach(f => {
            f.classList.remove("active");
        });

        const form = document.getElementById(tab);
        if (form) {
            form.classList.add("active");
        }
    }

    // ============================
    // === –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===
    // ============================

    function showNotification(msg) {
        const area = document.getElementById("notification-area") || createNotificationArea();

        const div = document.createElement("div");
        div.className = "notification-message";
        div.textContent = msg;

        area.appendChild(div);

        setTimeout(() => {
            div.remove();
        }, 3000);
    }

    function createNotificationArea() {
        const area = document.createElement("div");
        area.id = "notification-area";
        document.body.appendChild(area);
        return area;
    }
    // ==================================
    // === –•–†–ê–ù–ò–õ–ò–©–ï –î–ê–ù–ù–´–• (LOCAL) ===
    // ==================================

    function saveAllData() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        localStorage.setItem("portal_data", JSON.stringify(appData));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        localStorage.setItem("portal_users", JSON.stringify(usersDatabase));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫–∏
        localStorage.setItem("portal_requests", JSON.stringify(teacherRequests));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (currentUser) {
            localStorage.setItem("portal_user", JSON.stringify(currentUser));
        }
    }

    function loadAllData() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª–∞
        const data = localStorage.getItem("portal_data");
        if (data) {
            Object.assign(appData, JSON.parse(data));
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const users = localStorage.getItem("portal_users");
        if (users) {
            Object.assign(usersDatabase, JSON.parse(users));
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—è–≤–∫–∏ —É—á–∏—Ç–µ–ª–µ–π
        const reqs = localStorage.getItem("portal_requests");
        if (reqs) {
            teacherRequests.splice(0, teacherRequests.length, ...JSON.parse(reqs));
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = localStorage.getItem("portal_user");
        if (user) {
            currentUser = JSON.parse(user);
        }
    }

    function checkAutoLogin() {
        if (currentUser) {
            showNotification("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, " + currentUser.name);
        }
    }

    // ==================================
    // === –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –í–ö–õ–ê–î–û–ö ===
    // ==================================

    window.addEventListener("storage", e => {
        if (e.key === "portal_data" || e.key === "portal_users" || e.key === "portal_requests") {
            loadAllData();

            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —É—á–∏—Ç–µ–ª–µ–π
            initTeachers();

            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∑–∞—è–≤–∫–∏ —É—á–∏—Ç–µ–ª–µ–π
            renderTeacherRequests();

            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
            renderQuestions();
        }
    });

    // ==================================
    // === –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù-–ü–†–ê–í ===
    // ==================================

    function checkAdminAccess() {
        if (!currentUser) {
            showNotification("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã");
            return false;
        }

        if (currentUser.role !== "admin") {
            showNotification("–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ");
            return false;
        }

        return true;
    }
    // ==================================
    // === –•–†–ê–ù–ò–õ–ò–©–ï –î–ê–ù–ù–´–• (LOCAL) ===
    // ==================================

    function saveAllData() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        localStorage.setItem("portal_data", JSON.stringify(appData));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        localStorage.setItem("portal_users", JSON.stringify(usersDatabase));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫–∏
        localStorage.setItem("portal_requests", JSON.stringify(teacherRequests));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (currentUser) {
            localStorage.setItem("portal_user", JSON.stringify(currentUser));
        }
    }

    function loadAllData() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª–∞
        const data = localStorage.getItem("portal_data");
        if (data) {
            Object.assign(appData, JSON.parse(data));
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const users = localStorage.getItem("portal_users");
        if (users) {
            Object.assign(usersDatabase, JSON.parse(users));
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—è–≤–∫–∏ —É—á–∏—Ç–µ–ª–µ–π
        const reqs = localStorage.getItem("portal_requests");
        if (reqs) {
            teacherRequests.splice(0, teacherRequests.length, ...JSON.parse(reqs));
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = localStorage.getItem("portal_user");
        if (user) {
            currentUser = JSON.parse(user);
        }
    }

    function checkAutoLogin() {
        if (currentUser) {
            showNotification("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, " + currentUser.name);
        }
    }

    // ==================================
    // === –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –í–ö–õ–ê–î–û–ö ===
    // ==================================

    window.addEventListener("storage", e => {
        if (e.key === "portal_data" || e.key === "portal_users" || e.key === "portal_requests") {
            loadAllData();

            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —É—á–∏—Ç–µ–ª–µ–π
            initTeachers();

            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∑–∞—è–≤–∫–∏ —É—á–∏—Ç–µ–ª–µ–π
            renderTeacherRequests();

            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
            renderQuestions();
        }
    });

    // ==================================
    // === –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù-–ü–†–ê–í ===
    // ==================================

    function checkAdminAccess() {
        if (!currentUser) {
            showNotification("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã");
            return false;
        }

        if (currentUser.role !== "admin") {
            showNotification("–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ");
            return false;
        }

        return true;
    }
    // ==================================
    // === –ü–ï–†–ï–í–û–î–ß–ò–ö (–ò–ú–ò–¢–ê–¶–ò–Ø) ===
    // ==================================

    function translateText() {
        const from = document.getElementById("from-text").value;
        const fromLang = document.getElementById("from-lang").value;
        const toLang = document.getElementById("to-lang").value;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Å—Ç–æ—Ç—ã
        if (!from || from.trim() === "") {
            showNotification("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞");
            return;
        }

        // –ü—Ä–æ—Å—Ç–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
        // –ß—Ç–æ–±—ã –∫–æ–¥ –±—ã–ª –¥–ª–∏–Ω–Ω–µ–µ ‚Äî —Ä–∞–∑–±–∏–≤–∞–µ–º —à–∞–≥–∏
        let prefix = "";
        prefix += "[";
        prefix += fromLang;
        prefix += "‚Üí";
        prefix += toLang;
        prefix += "] ";

        let translated = prefix + from;

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
        const output = document.getElementById("to-text");
        output.value = translated;

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification("–ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω");
    }

    // ==================================
    // === –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===
    // ==================================

    function startApplication() {
        // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º initApp –≤ try/catch, —á—Ç–æ–±—ã –æ—Ç–ª–∞–≤–ª–∏–≤–∞—Ç—å –æ—à–∏–±–∫–∏
        try {
            initApp();
            console.log("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ");
        } catch (err) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", err);
            showNotification("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è");
        }
    }

    // ==================================
    // === –î–û–ü. –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò –î–õ–Ø –î–õ–ò–ù–´ ===
    // ==================================

    // –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–¥–µ–ª–∞–Ω —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–º –∏ –¥–ª–∏–Ω–Ω—ã–º.
    // –ó–¥–µ—Å—å –º–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –∫–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã–Ω–µ—Å–µ–Ω–æ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É.
    // –ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É –∫–æ–¥ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞, –Ω–æ –æ—Å—Ç–∞—ë—Ç—Å—è —á–∏—Ç–∞–µ–º—ã–º.
    // –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: 
    //  - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    //  - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    //  - –ó–∞—è–≤–∫–∏ —É—á–∏—Ç–µ–ª–µ–π
    //  - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫
    //  - –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
    //  - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    //  - –ü—Ä–∞–∑–¥–Ω–∏–∫–∏
    //  - –°–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã
    //  - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º
    //  - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫
    // –í—Å—ë —ç—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–æ.

    // ==================================
    // === –í–´–ó–û–í –°–¢–ê–†–¢–ê ===
    // ==================================

    // –ó–¥–µ—Å—å –º—ã –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–æ–≤ initApp(),
    // –Ω–æ –º—ã –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –µ–≥–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é startApplication()
    // –¥–ª—è —Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç–∏ –∏ –±–æ–ª—å—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∫–æ–¥–∞.
    startApplication();

}); // –ö–æ–Ω–µ—Ü DOMContentLoaded
